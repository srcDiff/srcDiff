@namespace cpp url(http://www.srcML.org/srcML/cpp);
@namespace diff url(http://www.srcML.org/srcDiff);

* {

	font-weight: bold;
	font-family: menlo, courier;
	word-wrap: break-word;

}

diff|insert {

	background-color: #21FF59;

}

diff|delete {

	background-color: #FEAAAD;
	text-decoration: line-through;

}

diff|common {

	background-color: white;

}

diff|insert::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<diff:insert>";

}

diff|delete::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<diff:delete>";

}

diff|common::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<diff:common>";

}

diff|insert::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</diff:insert>";

}

diff|delete::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</diff:delete>";

}

diff|common::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</diff:common>";

}

.content {
	font-weight: normal;
    margin: 0;
    margin-left: 34px;
    padding: 0;
    background: #FFF;
    float: left;
}

unit {

white-space: pre;
tab-size:8;

}

alignas::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<alignas>";

}

alignas::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</alignas>";

}

alignof::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<alignof>";

}

alignof::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</alignof>";

}

annotation::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<annotation>";

}

annotation::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</annotation>";

}

argument::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<argument>";

}

argument::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</argument>";

}

argument_list::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<argument_list>";

}

argument_list::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</argument_list>";

}

asm::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<asm>";

}

asm::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</asm>";

}

assert::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<assert>";

}

assert::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</assert>";

}

association::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<association>";

}

association::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</association>";

}

association_list::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<association_list>";

}

association_list::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</association_list>";

}

atomic::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<atomic>";

}

atomic::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</atomic>";

}

attribute::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<attribute>";

}

attribute::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</attribute>";

}

attribute_list::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<attribute_list>";

}

attribute_list::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</attribute_list>";

}

autoreleasepool::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<autoreleasepool>";

}

autoreleasepool::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</autoreleasepool>";

}

block::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<block>";

}

block::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</block>";

}

break::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<break>";

}

break::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</break>";

}

by::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<by>";

}

by::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</by>";

}

call::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<call>";

}

call::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</call>";

}

capture::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<capture>";

}

capture::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</capture>";

}

case::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<case>";

}

case::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</case>";

}

cast::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cast>";

}

cast::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cast>";

}

catch::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<catch>";

}

catch::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</catch>";

}

category::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<category>";

}

category::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</category>";

}

checked::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<checked>";

}

checked::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</checked>";

}

class::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<class>";

}

class::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</class>";

}

class_decl::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<class_decl>";

}

class_decl::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</class_decl>";

}

compatibility_alias::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<compatibility_alias>";

}

compatibility_alias::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</compatibility_alias>";

}

condition::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<condition>";

}

condition::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</condition>";

}

constructor::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<constructor>";

}

constructor::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</constructor>";

}

constructor_decl::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<constructor_decl>";

}

constructor_decl::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</constructor_decl>";

}

continue::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<continue>";

}

continue::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</continue>";

}

control::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<control>";

}

control::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</control>";

}

decl::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<decl>";

}

decl::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</decl>";

}

decl_stmt::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<decl_stmt>";

}

decl_stmt::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</decl_stmt>";

}

decltype::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<decltype>";

}

decltype::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</decltype>";

}

default::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<default>";

}

default::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</default>";

}

delegate::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<delegate>";

}

delegate::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</delegate>";

}

destructor::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<destructor>";

}

destructor::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</destructor>";

}

destructor_decl::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<destructor_decl>";

}

destructor_decl::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</destructor_decl>";

}

do::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<do>";

}

do::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</do>";

}

dynamic::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<dynamic>";

}

dynamic::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</dynamic>";

}

else::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<else>";

}

else::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</else>";

}

elseif::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<elseif>";

}

elseif::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</elseif>";

}

emit::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<emit>";

}

emit::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</emit>";

}

empty_stmt::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<empty_stmt>";

}

empty_stmt::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</empty_stmt>";

}

encode::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<encode>";

}

encode::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</encode>";

}

enum::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<enum>";

}

enum::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</enum>";

}

equals::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<equals>";

}

equals::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</equals>";

}

event::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<event>";

}

event::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</event>";

}

expr::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<expr>";

}

expr::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</expr>";

}

expr_stmt::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<expr_stmt>";

}

expr_stmt::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</expr_stmt>";

}

extends::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<extends>";

}

extends::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</extends>";

}

extern::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<extern>";

}

extern::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</extern>";

}

finally::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<finally>";

}

finally::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</finally>";

}

fixed::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<fixed>";

}

fixed::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</fixed>";

}

for::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<for>";

}

for::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</for>";

}

foreach::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<foreach>";

}

foreach::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</foreach>";

}

forever::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<forever>";

}

forever::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</forever>";

}

friend::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<friend>";

}

friend::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</friend>";

}

from::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<from>";

}

from::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</from>";

}

function::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<function>";

}

function::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</function>";

}

function_decl::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<function_decl>";

}

function_decl::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</function_decl>";

}

generic_selection::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<generic_selection>";

}

generic_selection::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</generic_selection>";

}

goto::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<goto>";

}

goto::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</goto>";

}

group::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<group>";

}

group::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</group>";

}

if::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<if>";

}

if::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</if>";

}

implements::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<implements>";

}

implements::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</implements>";

}

import::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<import>";

}

import::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</import>";

}

in::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<in>";

}

in::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</in>";

}

incr::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<incr>";

}

incr::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</incr>";

}

index::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<index>";

}

index::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</index>";

}

init::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<init>";

}

init::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</init>";

}

into::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<into>";

}

into::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</into>";

}

join::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<join>";

}

join::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</join>";

}

krparam::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<krparam>";

}

krparam::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</krparam>";

}

krparameter_list::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<krparameter_list>";

}

krparameter_list::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</krparameter_list>";

}

label::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<label>";

}

label::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</label>";

}

lambda::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<lambda>";

}

lambda::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</lambda>";

}

let::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<let>";

}

let::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</let>";

}

linq::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<linq>";

}

linq::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</linq>";

}

literal::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<literal>";

}

literal::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</literal>";

}

lock::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<lock>";

}

lock::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</lock>";

}

macro::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<macro>";

}

macro::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</macro>";

}

marker::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<marker>";

}

marker::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</marker>";

}

member_list::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<member_list>";

}

member_list::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</member_list>";

}

message::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<message>";

}

message::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</message>";

}

mode::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<mode>";

}

mode::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</mode>";

}

modifier::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<modifier>";

}

modifier::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</modifier>";

}

name::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<name>";

}

name::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</name>";

}

namespace::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<namespace>";

}

namespace::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</namespace>";

}

noexcept::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<noexcept>";

}

noexcept::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</noexcept>";

}

on::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<on>";

}

on::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</on>";

}

operator::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<operator>";

}

operator::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</operator>";

}

optional::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<optional>";

}

optional::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</optional>";

}

orderby::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<orderby>";

}

orderby::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</orderby>";

}

package::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<package>";

}

package::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</package>";

}

param::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<param>";

}

param::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</param>";

}

parameter_list::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<parameter_list>";

}

parameter_list::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</parameter_list>";

}

parse::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<parse>";

}

parse::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</parse>";

}

private::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<private>";

}

private::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</private>";

}

property::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<property>";

}

property::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</property>";

}

protected::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<protected>";

}

protected::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</protected>";

}

protocol::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<protocol>";

}

protocol::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</protocol>";

}

protocol_decl::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<protocol_decl>";

}

protocol_decl::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</protocol_decl>";

}

protocol_list::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<protocol_list>";

}

protocol_list::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</protocol_list>";

}

public::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<public>";

}

public::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</public>";

}

range::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<range>";

}

range::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</range>";

}

receiver::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<receiver>";

}

receiver::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</receiver>";

}

ref_qualifier::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<ref_qualifier>";

}

ref_qualifier::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</ref_qualifier>";

}

required::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<required>";

}

required::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</required>";

}

return::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<return>";

}

return::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</return>";

}

select::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<select>";

}

select::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</select>";

}

selector::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<selector>";

}

selector::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</selector>";

}

signals::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<signals>";

}

signals::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</signals>";

}

sizeof::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<sizeof>";

}

sizeof::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</sizeof>";

}

specifier::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<specifier>";

}

specifier::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</specifier>";

}

static::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<static>";

}

static::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</static>";

}

struct::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<struct>";

}

struct::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</struct>";

}

struct_decl::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<struct_decl>";

}

struct_decl::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</struct_decl>";

}

super::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<super>";

}

super::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</super>";

}

switch::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<switch>";

}

switch::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</switch>";

}

synchronized::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<synchronized>";

}

synchronized::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</synchronized>";

}

synthesize::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<synthesize>";

}

synthesize::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</synthesize>";

}

target::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<target>";

}

target::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</target>";

}

template::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<template>";

}

template::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</template>";

}

ternary::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<ternary>";

}

ternary::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</ternary>";

}

then::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<then>";

}

then::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</then>";

}

throw::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<throw>";

}

throw::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</throw>";

}

throws::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<throws>";

}

throws::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</throws>";

}

try::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<try>";

}

try::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</try>";

}

type::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<type>";

}

type::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</type>";

}

typedef::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<typedef>";

}

typedef::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</typedef>";

}

typeid::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<typeid>";

}

typeid::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</typeid>";

}

typename::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<typename>";

}

typename::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</typename>";

}

typeof::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<typeof>";

}

typeof::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</typeof>";

}

unchecked::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<unchecked>";

}

unchecked::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</unchecked>";

}

union::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<union>";

}

union::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</union>";

}

union_decl::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<union_decl>";

}

union_decl::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</union_decl>";

}

unit::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<unit>";

}

unit::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</unit>";

}

unsafe::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<unsafe>";

}

unsafe::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</unsafe>";

}

using::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<using>";

}

using::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</using>";

}

using_stmt::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<using_stmt>";

}

using_stmt::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</using_stmt>";

}

where::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<where>";

}

where::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</where>";

}

while::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<while>";

}

while::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</while>";

}

cpp|define::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:define>";

}

cpp|define::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:define>";

}

cpp|directive::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:directive>";

}

cpp|directive::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:directive>";

}

cpp|elif::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:elif>";

}

cpp|elif::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:elif>";

}

cpp|else::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:else>";

}

cpp|else::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:else>";

}

cpp|empty::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:empty>";

}

cpp|empty::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:empty>";

}

cpp|endif::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:endif>";

}

cpp|endif::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:endif>";

}

cpp|endregion::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:endregion>";

}

cpp|endregion::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:endregion>";

}

cpp|error::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:error>";

}

cpp|error::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:error>";

}

cpp|file::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:file>";

}

cpp|file::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:file>";

}

cpp|if::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:if>";

}

cpp|if::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:if>";

}

cpp|ifdef::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:ifdef>";

}

cpp|ifdef::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:ifdef>";

}

cpp|ifndef::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:ifndef>";

}

cpp|ifndef::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:ifndef>";

}

cpp|import::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:import>";

}

cpp|import::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:import>";

}

cpp|include::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:include>";

}

cpp|include::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:include>";

}

cpp|line::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:line>";

}

cpp|line::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:line>";

}

cpp|literal::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:literal>";

}

cpp|literal::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:literal>";

}

cpp|macro::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:macro>";

}

cpp|macro::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:macro>";

}

cpp|number::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:number>";

}

cpp|number::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:number>";

}

cpp|pragma::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:pragma>";

}

cpp|pragma::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:pragma>";

}

cpp|region::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:region>";

}

cpp|region::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:region>";

}

cpp|then::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:then>";

}

cpp|then::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:then>";

}

cpp|undef::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:undef>";

}

cpp|undef::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:undef>";

}

cpp|value::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:value>";

}

cpp|value::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:value>";

}

cpp|warning::before {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "<cpp:warning>";

}

cpp|warning::after {

	font-weight: normal;
	font-size: 90%;opacity: 0.6;
    filter: alpha(opacity=60);
	content: "</cpp:warning>";

}
