<!DOCTYPE refentry SYSTEM "option.dtd">

<refentry>
<refentryinfo>
    <date>&DATE;</date>
</refentryinfo>
<refmeta>
  <refentrytitle><application>srcml2src</application></refentrytitle><manvolnum>1</manvolnum><refmiscinfo>srcml2src 1.0</refmiscinfo>
</refmeta>
<refnamediv>
  <refname><application>srcml2src</application></refname><refpurpose>translates the XML source-code representation srcML into source code and provides utility features for the srcML format</refpurpose>
</refnamediv>
<refsynopsisdiv>
  <refsynopsisdivinfo>
    <date>2001-01-01</date>
  </refsynopsisdivinfo>
  <cmdsynopsis>
    <command>srcml2src</command>
<arg><option>-nizcgv </option></arg>
<arg><option>&LANGUAGE_FLAG; </option></arg>
<arg><option>&FILENAME_FLAG; </option></arg>
<arg><option>&DIRECTORY_FLAG; </option></arg>
<arg><option>&ENCODING_FLAG; </option></arg>
<arg><option>&SRC_ENCODING_FLAG; <replaceable class="parameter">encoding</replaceable></option></arg>
<arg><replaceable class="parameter">input-srcML-file</replaceable></arg>
<arg><option>&OUTPUT_FLAG_SHORT;                            <replaceable class="parameter">output-source-code-file</replaceable></option></arg>
  </cmdsynopsis>
</refsynopsisdiv>
<refsect1>
  <refsect1info>
    <date>2006-01-04</date>
  </refsect1info>
  <title>DESCRIPTION</title>
  <para>
    The program <command>srcml2src</command> translates from the XML
    source-code representation srcML into source code.  The srcML
    format allows for XML addressing, querying, and transformation of
    source code.  The srcML format for a source-code file is typically
    produced by <command>src2srcml</command>.
  </para>
  <para>
    The combination of <command>src2srcml</command> and
    <command>srcml2src</command> allows for full round-trip
    transformation of source-code files without any loss of comments,
    white space, and preprocessing statements.
  </para>
  <para>
    Conversion from the srcML format to source code is relatively
    straightforward.  All XML tags are removed and escaped characters
    are unescaped.  Special srcML elements for characters not
    permitted in XML, e.g., formfeed, are converted back to their
    original characters.
  </para>
  <para>
    In addition to conversion, <command>srcml2src</command> provides
    various srcML utilities such as extracting metadata, extracting
    individual files in a srcML archive (as either text or XML),
    and extracting metadata from individual files in a srcML archive.
    It can also be used to extract all the individual files in
    a srcML archive.
  </para>
  <para>
    Further, <command>srcml2src</command> allows for querying srcML
    using XPath expressions and RelaxNG, and transformation using
    XLST.  With a srcML archive, a query/transformation is applied
    individually to each file and the results combined.  This allows
    the XPath, XSLT, or RelaxNG to work efficiently on large srcML
    documents that contain all of the source code in a large project.
  </para>
  <para>
    Using the character - in the place of an input srcML file filename
    uses standard input, and in place of an output source-code file
    uses standard output.
  </para>
</refsect1>
<refsect1>
  <title>OPTIONS</title>
  <variablelist>
    <varlistentry>
      <term><option>&HELP_FLAG_SHORT;, &HELP_FLAG;</option></term>
      <listitem>
	<para>
	  Output the help and exit.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&VERSION_FLAG_SHORT;, &VERSION_FLAG;</option></term>
      <listitem>
	<para>
	  Output the version of srcml2src and exit.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&SRC_ENCODING_FLAG_SHORT;, &SRC_ENCODING_FLAG;=<replaceable class="parameter">encoding</replaceable></option></term>
      <listitem>
	<para>
	  Sets the encoding used for the output text source-code files
	  to <replaceable>encoding</replaceable>.  The default is &DEFAULT_TEXT_ENCODING;.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&UNIT_FLAG_SHORT;, &UNIT_FLAG;=<replaceable class="parameter">number</replaceable></option></term>
      <listitem>
	<para>
	  Refers to a specific file in a srcML archive.
	  The numbering starts at 1.  If the number is outside of the
	  range of nested units then nothing is returned.  In
	  combination with the attribute flags, outputs the attribute
	  of that particular unit.  In combination with the <option>&XML_FLAG;</option> option
	  outputs the unit in xml (not as text as is the default).
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&EXPAND_FLAG_SHORT;, &EXPAND_FLAG;</option></term>
      <listitem>
	<para>
	  Extracts all files from a srcML archive back into
	  source-code files.  The file path is based on the
	  attributes <literal>directory</literal>
	  and <literal>filename</literal> with necessary
	  subdirectories created.  Existing files with the same path
	  are overwritten.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&XML_FLAG_SHORT;, &XML_FLAG;</option></term>
      <listitem>
	<para>
	  Output is in srcML format.  Used in combination with the
	  <option>&UNIT_FLAG;</option> option to output a particular
	  nested unit in XML.  The attributes on the output element <literal>unit</literal> are
	  the attributes of the individual unit with any missing attributes
	  taken from the root unit.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&COMPRESSED_FLAG_SHORT;, &COMPRESSED_FLAG;</option></term>
      <listitem>
	<para>
	  Output is in compressed gzip format.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&NO_XML_DECLARATION_FLAG;</option></term>
      <listitem>
	<para>
	  No output of the default XML declaration for XML output options.
	  Useful when the output is to be placed inside another XML document.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&NO_NAMESPACE_DECLARATION_FLAG;</option></term>
      <listitem>
	<para>
	  No output of namespace declarations for XML output options.
	  Useful when the output is to be placed inside another XML document.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&VERBOSE_FLAG_SHORT;, &VERBOSE_FLAG;</option></term>
      <listitem>
	<para>
	  Verbose output to standard error.
	</para>
      </listitem>
    </varlistentry>
  </variablelist>
</refsect1>
<refsect1>
  <title>Metadata Options</title>
  <para>
    Options to access to the metadata stored in the
    srcML document.  Unless otherwise noted, the metadata is quickly extracted
    from the start root element or the XML declaration and does not
    traverse the entire document.  Output is to standard output.
  </para>
    <varlistentry>
      <term><option>&LANGUAGE_FLAG_SHORT;, &LANGUAGE_FLAG;</option></term>
      <listitem>
	<para>
	  Output the language of the srcML file as stored in the
	  attribute <literal>language</literal> in the element <literal>unit</literal>.
	  The language is the value of the attribute of the root
	  element, or for a particular unit if specified with the
	  <option>&UNIT_FLAG;</option> option.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&DIRECTORY_FLAG_SHORT;, &DIRECTORY_FLAG;</option></term>
      <listitem>
	<para>
	  Output the directory of the srcML file as stored in the
	  attribute <literal>dir</literal> in the element <literal>unit</literal>.  The
	  directory is the value of the attribute of the root
	  element, or for a particular unit if specified with the
	  <option>&UNIT_FLAG;</option> option.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&FILENAME_FLAG_SHORT;, &FILENAME_FLAG;</option></term>
      <listitem>
	<para>
	  Output the filename of the srcML file as stored in the
	  attribute <literal>filename</literal> in the element <literal>unit</literal>.
	  The filename is the value of the attribute of the root
	  element, or for a particular unit if specified with the
	  <option>&UNIT_FLAG;</option> option.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&SRCVERSION_FLAG_SHORT;, &SRCVERSION_FLAG;</option></term>
      <listitem>
	<para>
	  Output the version of the srcML file as stored attribute
	  <literal>version</literal> in the element <literal>unit</literal>.  The version
	  is the value of the attribute of the root
	  element, or for a particular unit if specified with the
	  <option>&UNIT_FLAG;</option> option.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&NAMESPACE_FLAG_SHORT;, &NAMESPACE_FLAG;=<replaceable class="parameter">uri</replaceable></option></term>
      <listitem>
	<para>
	  Output the prefix of the namespace given by uri.  The name of
	  the prefix is output with a newline character.  The default
	  namespace is a blank line.  If the URI does not match a
	  namespace declaration then no line is output.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&NESTED_FLAG_SHORT;, &NESTED_FLAG;</option></term>
      <listitem>
	<para>
	  Output the number of nested units in a srcML archive.
	  Result is 0 for a srcML file that is not an archive.
	  Requires traversal of the entire document.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&INFO_FLAG_SHORT;, &INFO_FLAG;</option></term>
      <listitem>
	<para>
	  Output most of the metadata of the srcML file.  Each
	  individual piece of data, i.e., namespaces, encoding,
	  language, directory, filename, and version, is on a separate
	  line.  The form of the information is that same as that of
	  the full flag option to src2srcml to form it, without the
	  leading "--".
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&LONG_INFO_FLAG_SHORT;, &LONG_INFO_FLAG;</option></term>
      <listitem>
	<para>
	  Output the metadata of the <option>&INFO_FLAG;</option>
	  option along with the count of the nested files in a
	  srcML archive.  Requires traversal of the entire srcML document.
	</para>
      </listitem>
    </varlistentry>
</refsect1>
<refsect1>
  <title>Querying and Transformation Options</title>
  <para>
    Options for efficiently querying and transformation srcML.
    Standalone XML tools that are DOM based (XPath, XSLT) have large memory requirements with large
    srcML files.  The <command>srcml2src</command> options work efficiently with large srcML
    archives that contain large numbers of files in a project, e.g., tens
    of thousands of files for a project in a single 1 GB srcML archive 1 GB.
    All queries/transformations are performed on a unit
    by unit basis inside the srcML archive.
  </para>
    <varlistentry>
      <term><option>&XPATH_FLAG;=<replaceable class="parameter">xpath</replaceable></option></term>
      <listitem>
	<para>
	  Apply the XPath expression <replaceable>xpath</replaceable> to each individual unit in the
	  srcML archive and combine the results of the individual queries.
	</para>

	<para>
	  To refer to elements standard srcML prefixes (see <command>srcml2src</command>) are used.
	  One exception is that prefix "src" is used for srcML elements, e.g., <literal>src:unit</literal>.
	  Note that these prefixes do not have to match the prefixes used in the document.
	</para>

	<para>
	  If the result of the expression is anything other then a set of nodes the
	  individual unit results are combined.  For numeric results, e.g., counts,
	  the final result is the sum of the individual results.  For boolean values,
	  the result is the logical <literal>or</literal> of the individual results.
	</para>

	<para>
	  The output is a srcML archive with each XPath expression
	  result in its own individual
	  element <literal>unit</literal>.  If the XPath expression
	  does not result in a element <literal>unit</literal>, one is
	  wrapped around the result.  This format allows for pipelines of
	  queries and transformations.
	</para>

      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&XSLT_FLAG;=<replaceable class="parameter">xslt_file</replaceable></option></term>
      <listitem>
	<para>
	  Apply the XSLT program <replaceable>xslt_file</replaceable> to each individual unit in a
	  srcML archive and combine the results of the individual transformations.
	</para>

	<para>
	  The XSLT program can use any part of XSLT 1.0, and many EXSLT extension functions.
	  Since the XSLT program doesn't have access to some information on the entire archive, the program
	  is passed a series of internally generated parameters.  The parameters
	  src:filename, src:directory, src:version, and src:language are the corresponding
	  entries from the root element <literal>unit</literal>.
	  The parameter
	  src:position is the position of an individual unit in the root unit, e.g., the
	  position of the file in the entire srcML archive.  Parameters can also be
	  passed to the XSLT program from the <command>srcml2src</command> command line.
	</para>

	<para>
	  The output is a srcML document with the combined results of the XSLT transformation
	  wrapped in an outer element <literal>unit</literal> thereby providing an output format that allows
	  for repeated application.
	</para>

      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&PARAM_FLAG; <replaceable class="parameter">parameter_name</replaceable> <replaceable class="parameter">parameter_value</replaceable></option></term>

      <listitem>
	<para>
	  Pass the parameter <replaceable>parameter_name</replaceable> and its corresponding
	  <replaceable>parameter_value</replaceable> to the XSLT transformation.
	  This is only valid with the <option>&XSLT_FLAG;</option> option.
	  This is analagous to the &PARAM_FLAG; of xsltproc.  The xsltproc limit of 32
	  parameters applies here.
	  Note that the internally generated parameters src:filename, src:directory, src:version,
	  src:language, and src:position are automatically generated and are not part
	  of the 32 parameter limit.
	</para>

      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&RELAXNG_FLAG;=<replaceable class="parameter">relaxng_file</replaceable></option></term>
      <listitem>
	<para>
	  Apply the RelaxNG grammar <replaceable>relaxng_file</replaceable> to each individual unit in the
	  srcML archive and combine the parts that match.
	</para>

	<para>
	  The RelaxNG grammar acts as a filter for individual units
	  (files).  If the RelaxNG gramar is valid for a unit, then
	  that unit is output.  The result is a srcML archive with
	  only the files that are valid based on the given RelaxNG
	  grammar.
	</para>

      </listitem>
    </varlistentry>
</refsect1>
<refsect1>
  <title>USAGE</title>
  <para>
    To translate the srcML file main.cpp.xml into the C++ source-code file main.cpp:
  </para>
  <para>
    <command>srcml2src</command> main.cpp.xml &OUTPUT_FLAG_SHORT; main.cpp
  </para>
  <para>
    To extract the language of the srcML file main.cpp.xml:
  </para>
  <para>
    <command>srcml2src</command> &LANGUAGE_FLAG; main.cpp.xml
  </para>
  <para>
    To extract the directory of the srcML file main.cpp.xml:
  </para>
  <para>
    <command>srcml2src</command> &DIRECTORY_FLAG; main.cpp.xml
  </para>
  <para>
    To extract the filename of the srcML file main.cpp.xml:
  </para>
  <para>
    <command>srcml2src</command> &FILENAME_FLAG; main.cpp.xml
  </para>
  <para>
    To extract the version of the srcML file main.cpp.xml:
  </para>
  <para>
    <command>srcml2src</command> &VERSION_FLAG; main.cpp.xml
  </para>
  <para>
    To extract the xml encoding of the srcML file main.cpp.xml:
  </para>
  <para>
    <command>srcml2src</command> &ENCODING_FLAG; main.cpp.xml
  </para>
</refsect1>
<refsect1>
  <title>RETURN STATUS</title>

  <para>&STATUS_SUCCESS;: Normal</para>
  <para>&STATUS_ERROR;: Error </para>
  <para>&STATUS_INPUTFILE_PROBLEM;: Problem with input file</para>
  <para>&STATUS_UNKNOWN_OPTION;: Unknown option</para>
  <para>&STATUS_UNKNOWN_ENCODING;: Unknown encoding</para>
  <para>&STATUS_SRCENCODING_MISSING;: Text encoding option specified, but value missing</para>
  <para>&STATUS_UNIT_MISSING;: Unit option specified, but value missing</para>
  <para>&STATUS_UNIT_INVALID;: Unit option value is not valid</para>
  <para>&STATUS_INVALID_OPTION_COMBINATION;: Invalid combination of options</para>
  <para>&STATUS_TERMINATED;: Incomplete output due to termination</para>

</refsect1>
<refsect1>
  <title>CAVEATS</title>
  <para>
    Line endings are normalized in XML and in the srcML format.
  </para>
</refsect1>
<refsect1>
  <title>BUGS</title>
  <para>
    There may be some parts of XML (e.g., comments) unused in the srcML format (i.e., not generated by src2srcml)
    which are not preserved in the output with the <option>&XML_FLAG;</option> option.
  </para>
</refsect1>
<refsect1>
  <title>SEE ALSO</title>
  <para>
    <command>src2srcml</command>(1)
  </para>
</refsect1>
<refsect1>
  <title>AUTHOR</title>
  <para>Written by 
    <author>
      <firstname>Michael</firstname>
      <othername role="mi">L.</othername>
      <surname>Collard</surname>
      <contrib>Original author</contrib>
    </author> 
    and
    <author>
      <firstname>Huzefa</firstname>
      <surname>Kagdi</surname>
      <contrib>Original author</contrib>
    </author>
  </para>
</refsect1>
</refentry>
