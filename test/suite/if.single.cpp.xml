<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:diff="http://www.sdml.info/srcDiff" language="C++" dir="if.single">

<unit filename="if.single|if.single"><diff:delete><if>if<condition>(<expr><lit:literal type="number">1</lit:literal></expr>)</condition><then>
<expr_stmt><expr><name>a</name></expr>;</expr_stmt></then></if></diff:delete></unit>

<unit filename="if.single|if.single">
<diff:delete><if>if<condition>(<expr><lit:literal type="number">1</lit:literal></expr>)</condition><then>
<diff:common><expr_stmt><expr><name>a</name></expr>;</expr_stmt></diff:common></then></if></diff:delete>
</unit>

<unit filename="if.single|if.single">
<expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<diff:delete><if>if<condition>(<expr><lit:literal type="number">1</lit:literal></expr>)</condition><then>
<diff:common><expr_stmt><expr><name>b</name></expr>;</expr_stmt></diff:common></then></if></diff:delete>
</unit>

<unit filename="if.single|if.single">
<expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<diff:delete><if>if<condition>(<expr><lit:literal type="number">1</lit:literal></expr>)</condition><then>
<expr_stmt><expr><name>b</name></expr>;</expr_stmt></then></if></diff:delete></unit>

<unit filename="if.single|if.single"><diff:delete><if>if<condition>(<expr><lit:literal type="number">1</lit:literal></expr>)</condition><then> <block>{
<expr_stmt><expr><name>a</name></expr>;</expr_stmt>
}</block></then></if></diff:delete></unit>

<unit filename="if.single|if.single"><expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<diff:delete><if>if<condition>(<expr><lit:literal type="number">1</lit:literal></expr>)</condition><then> <block>{
<expr_stmt><expr><name>b</name></expr>;</expr_stmt>
}</block></then></if></diff:delete></unit>

<unit filename="if.single|if.single"><diff:delete><if>if<condition>(<expr><lit:literal type="number">1</lit:literal></expr>)</condition><then> <block>{
<diff:common><expr_stmt><expr><name>a</name></expr>;</expr_stmt></diff:common>
}</block></then></if></diff:delete></unit>

<unit filename="if.single|if.single">
<expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<diff:delete><if>if<condition>(<expr><lit:literal type="number">1</lit:literal></expr>)</condition><then> <block>{
<expr_stmt><expr><name>b</name></expr>;</expr_stmt>
}</block></then></if></diff:delete></unit>

<unit filename="if.single|if.single">
<diff:delete><if>if <condition>(<expr><op:operator>!</op:operator><name><name>cmd</name><op:operator>-&gt;</op:operator><name>t_data_nents</name></name></expr>)</condition><then>
    <return>return;</return></then>
<elseif>else <if>if <condition>(<expr><name><name>cmd</name><op:operator>-&gt;</op:operator><name>t_data_nents</name></name> <op:operator>==</op:operator> <lit:literal type="number">1</lit:literal></expr>)</condition><then>
    <diff:common><expr_stmt><expr><call><name>kunmap</name><argument_list>(<argument><expr><call><name>sg_page</name><argument_list>(<argument><expr><name><name>cmd</name><op:operator>-&gt;</op:operator><name>t_data_sg</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></diff:common></then></if></elseif></if></diff:delete>
</unit>

<unit filename="if.single|if.single">
<if>if<condition>(<expr><name>a</name> <op:operator>&amp;&amp;</op:operator> <name>b</name></expr>)</condition><then><diff:delete type="change">
    <expr_stmt><expr><name>a</name> <op:operator>+</op:operator> <name>b</name> <op:operator>+</op:operator> <name>c</name> <op:operator>+</op:operator> <name>d</name> <op:operator>+</op:operator> <name>e</name> <op:operator>+</op:operator> <name>f</name> <op:operator>+</op:operator> <name>g</name></expr>;</expr_stmt></diff:delete><diff:insert type="change"> 
    <empty_stmt>;</empty_stmt></diff:insert></then></if>
</unit>

<unit filename="if.single|if.single">
<if>if <condition>(<expr><diff:delete type="change"><name>p</name> <op:operator>&gt;=</op:operator> <call><name>count</name><argument_list>()</argument_list></call></diff:delete><diff:insert type="change"><call><name>already_exist</name><argument_list>(<argument><expr><name>chain</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></diff:insert></expr>)</condition><then> <break>break;</break></then></if></unit>

</unit>
