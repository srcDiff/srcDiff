<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:diff="http://www.srcML.org/srcDiff" language="C++" url="expr_stmt">

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="expr_stmt|expr_stmt"><diff:delete><expr_stmt><expr><name>a</name></expr>;</expr_stmt></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="expr_stmt|expr_stmt"><diff:delete><diff:ws>
</diff:ws><expr_stmt><expr><name>a</name></expr>;</expr_stmt></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="expr_stmt|expr_stmt">
<expr_stmt><expr><call><name>c</name><argument_list>(<diff:insert><argument><expr><name>foo</name></expr></argument>,<diff:ws> </diff:ws><argument><expr><name>bar</name></expr></argument></diff:insert>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="expr_stmt|expr_stmt">
<expr_stmt><expr><call><name>actionCollection</name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>addAction</name><argument_list>(<argument><expr><literal type="string">"rotatelayer"</literal></expr></argument>, <argument><expr><name><diff:delete type="change">action</diff:delete><diff:insert type="change">m_rotateLayerAction</diff:insert></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="expr_stmt|expr_stmt">
<if>if<condition>(<expr><name><name>state</name><operator>-&gt;</operator><name>context</name><operator>-&gt;</operator><name>handler</name><operator>-&gt;</operator><name>meta_tag</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>state</name><operator>-&gt;</operator><name>meta_tags</name><operator>.</operator><name>empty</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{

    <for>for<control>(<init><decl><type><name><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>srcml_element</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>const_iterator</name></name></type> <name>citr</name> <init>= <expr><call><name><name>state</name><operator>-&gt;</operator><name>meta_tags</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><name>citr</name> <operator>&lt;</operator> <call><name><name>state</name><operator>-&gt;</operator><name>meta_tags</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>citr</name></expr></incr>)</control> <block>{

        <if>if<condition>(<expr><name><name>state</name><operator>-&gt;</operator><name>context</name><operator>-&gt;</operator><name>terminate</name></name></expr>)</condition><then><diff:delete><diff:ws>
           </diff:ws></diff:delete> <block type="pseudo"><return>return;</return></block></then></if>

<diff:insert><diff:ws>        </diff:ws><decl_stmt><decl><type><name>srcsax_namespace</name><diff:ws> </diff:ws><modifier>*</modifier></type><diff:ws> </diff:ws><name>srcsax_namespaces_meta_tag</name><diff:ws> </diff:ws><init>=<diff:ws> </diff:ws><expr><operator>(</operator><name>srcsax_namespace</name><diff:ws> </diff:ws><operator>*</operator><operator>)</operator><call><name>libxml2_namespaces2srcsax_namespaces</name><argument_list>(<argument><expr><name><name>citr</name><operator>-&gt;</operator><name>nb_namespaces</name></name></expr></argument>,<diff:ws> </diff:ws><argument><expr><name><name>citr</name><operator>-&gt;</operator><name>namespaces</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt><diff:ws>
        </diff:ws><decl_stmt><decl><type><name>srcsax_attribute</name><diff:ws> </diff:ws><modifier>*</modifier></type><diff:ws> </diff:ws><name>srcsax_attributes_meta_tag</name><diff:ws> </diff:ws><init>=<diff:ws> </diff:ws><expr><operator>(</operator><name>srcsax_attribute</name><diff:ws> </diff:ws><operator>*</operator><operator>)</operator><call><name>libxml2_attributes2srcsax_attributes</name><argument_list>(<argument><expr><name><name>citr</name><operator>-&gt;</operator><name>nb_attributes</name></name></expr></argument>,<diff:ws> </diff:ws><argument><expr><name><name>citr</name><operator>-&gt;</operator><name>attributes</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt><diff:ws>

</diff:ws></diff:insert>        <expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>libxml2_namespaces</name></name> <operator>=</operator> <name><name>citr</name><operator>-&gt;</operator><name>namespaces</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>libxml2_attributes</name></name> <operator>=</operator> <name><name>citr</name><operator>-&gt;</operator><name>attributes</name></name></expr>;</expr_stmt>
<diff:delete><diff:ws>
</diff:ws></diff:delete>        <expr_stmt><expr><call><name><name>state</name><operator>-&gt;</operator><name>context</name><operator>-&gt;</operator><name>handler</name><operator>-&gt;</operator><name>meta_tag</name></name><argument_list>(<argument><expr><name><name>state</name><operator>-&gt;</operator><name>context</name></name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name><name>citr</name><operator>-&gt;</operator><name>localname</name></name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name><name>citr</name><operator>-&gt;</operator><name>prefix</name></name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name><name>citr</name><operator>-&gt;</operator><name>URI</name></name></expr></argument>,
                                            <argument><expr><name><name>citr</name><operator>-&gt;</operator><name>nb_namespaces</name></name></expr></argument>, <argument><expr><diff:delete type="change"><literal type="number">0</literal></diff:delete><diff:insert type="change"><name>srcsax_namespaces_meta_tag</name></diff:insert></expr></argument>, <argument><expr><name><name>citr</name><operator>-&gt;</operator><name>nb_attributes</name></name></expr></argument>,
                                            <argument><expr><diff:delete type="change"><literal type="number">0</literal></diff:delete><diff:insert type="change"><name>srcsax_attributes_meta_tag</name></diff:insert></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>libxml2_namespaces</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>libxml2_attributes</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt><diff:insert><diff:ws>

        </diff:ws><expr_stmt><expr><call><name>free_srcsax_namespaces</name><argument_list>(<argument><expr><name><name>citr</name><operator>-&gt;</operator><name>nb_namespaces</name></name></expr></argument>,<diff:ws> </diff:ws><argument><expr><name>srcsax_namespaces_meta_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><diff:ws>
        </diff:ws><expr_stmt><expr><call><name>free_srcsax_attributes</name><argument_list>(<argument><expr><name><name>citr</name><operator>-&gt;</operator><name>nb_attributes</name></name></expr></argument>,<diff:ws> </diff:ws><argument><expr><name>srcsax_attributes_meta_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></diff:insert><diff:delete><diff:ws>    </diff:ws></diff:delete>
    }</block></for>

<diff:delete><diff:ws>
</diff:ws></diff:delete>}</block></then></if>
</unit>

</unit>
