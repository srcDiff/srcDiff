<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:diff="http://www.srcML.org/srcDiff" language="C++" url="if">

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if"><diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then>
<block type="pseudo"><expr_stmt><expr><name>a</name></expr>;</expr_stmt></block></then></if></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then>
<block type="pseudo"><diff:common><expr_stmt><expr><name>a</name></expr>;</expr_stmt></diff:common></block></then></if></diff:delete>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then>
<block type="pseudo"><diff:common><expr_stmt><expr><name>b</name></expr>;</expr_stmt></diff:common></block></then></if></diff:delete>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then>
<block type="pseudo"><expr_stmt><expr><name>b</name></expr>;</expr_stmt></block></then></if></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if"><diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{
<expr_stmt><expr><name>a</name></expr>;</expr_stmt>
}</block></then></if></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if"><expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{
<expr_stmt><expr><name>b</name></expr>;</expr_stmt>
}</block></then></if></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if"><diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{
<diff:common><expr_stmt><expr><name>a</name></expr>;</expr_stmt></diff:common>
}</block></then></if></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{
<expr_stmt><expr><name>b</name></expr>;</expr_stmt>
}</block></then></if></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<diff:delete><if>if <condition>(<expr><operator>!</operator><name><name>cmd</name><operator>-&gt;</operator><name>t_data_nents</name></name></expr>)</condition><then>
    <block type="pseudo"><return>return;</return></block></then>
<elseif>else <if>if <condition>(<expr><name><name>cmd</name><operator>-&gt;</operator><name>t_data_nents</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
    <block type="pseudo"><diff:common><expr_stmt><expr><call><name>kunmap</name><argument_list>(<argument><expr><call><name>sg_page</name><argument_list>(<argument><expr><name><name>cmd</name><operator>-&gt;</operator><name>t_data_sg</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></diff:common></block></then></if></elseif></if></diff:delete>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<if>if<condition>(<expr><name>a</name> <operator>&amp;&amp;</operator> <name>b</name></expr>)</condition><then>
    <block type="pseudo"><diff:delete type="change"><expr_stmt><expr><name>a</name> <operator>+</operator> <name>b</name> <operator>+</operator> <name>c</name> <operator>+</operator> <name>d</name> <operator>+</operator> <name>e</name> <operator>+</operator> <name>f</name> <operator>+</operator> <name>g</name></expr>;</expr_stmt></diff:delete><diff:insert type="change"><empty_stmt>;</empty_stmt></diff:insert></block></then></if>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<if>if <condition>(<diff:delete type="change"><expr><name>p</name> <operator>&gt;=</operator> <call><name>count</name><argument_list>()</argument_list></call></expr></diff:delete><diff:insert type="change"><expr><call><name>already_exist</name><argument_list>(<argument><expr><name>chain</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr></diff:insert>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<diff:insert><if>if<condition>( <expr><operator>*</operator><call><name><name>m_d</name><operator>-&gt;</operator><name>cachedPaintDevice</name><operator>-&gt;</operator><name>colorSpace</name></name><argument_list>()</argument_list></call> <operator>==</operator> <operator>*</operator><call><name>image</name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>colorSpace</name><argument_list>()</argument_list></call></expr>)</condition><then>
        <block type="pseudo"><expr_stmt><expr><call><name><name>m_d</name><operator>-&gt;</operator><name>cachedPaintDevice</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></then>

<else>else
    <block type="pseudo"><diff:common><expr_stmt><expr><name><name>m_d</name><operator>-&gt;</operator><name>cachedPaintDevice</name></name> <operator>=</operator> <operator>new</operator> <call><name>KisPaintDevice</name><argument_list>(<argument><expr><call><name>image</name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>colorSpace</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></diff:common></block></else></if>
</diff:insert></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if"><diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{
<diff:common><expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name></expr>;</expr_stmt></diff:common>
}</block></then></if></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if"><expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{
<diff:common><expr_stmt><expr><name>b</name></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name></expr>;</expr_stmt></diff:common>
}</block></then></if></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{

<diff:common>    <expr_stmt><expr><name>a</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>b</name></expr>;</expr_stmt>
</diff:common>
}</block></then></if>

<if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{
    
<diff:common>    <expr_stmt><expr><name>c</name></expr>;</expr_stmt>

</diff:common>}</block></then></if></diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{
<diff:common>    <expr_stmt><expr><name>a</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>b</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>c</name></expr>;</expr_stmt>
</diff:common><diff:insert>    <expr_stmt><expr><name>g</name></expr>;</expr_stmt>
</diff:insert><diff:common>    <while>while<condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{
    <expr_stmt><expr><name>d</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>e</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>f</name></expr>;</expr_stmt>
<diff:delete>    <expr_stmt><expr><name>g</name></expr>;</expr_stmt></diff:delete>
<diff:delete type="whitespace">
</diff:delete>    }</block></while>

</diff:common><comment type="line">// foobar</comment>
}</block></then> <else>else 
    <block type="pseudo"><expr_stmt><expr><name>h</name></expr>;</expr_stmt></block></else></if>
</diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<diff:delete><if>if<condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{
<diff:common><expr_stmt><expr><name>a</name></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>c</name><argument_list>(<diff:delete><argument><expr><name>foo</name></expr></argument>, <argument><expr><name>bar</name></expr></argument></diff:delete>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name></expr>;</expr_stmt>
<expr_stmt><expr><name>e</name></expr>;</expr_stmt>
</diff:common>}</block></then></if>
</diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<if>if<condition>(<expr><name>a</name> <operator>&amp;&amp;</operator> <name>b</name></expr>)</condition><then> <block>{

<diff:delete>    <expr_stmt><expr><name>a</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>b</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>c</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>d</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>e</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>f</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>g</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>h</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>i</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>j</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>k</name></expr>;</expr_stmt>


</diff:delete>}</block></then></if><diff:delete type="whitespace">
</diff:delete></unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<if>if<condition>(<expr><name>a</name> <operator>&amp;&amp;</operator> <name>b</name></expr>)</condition><then><diff:delete type="change"> <block>{

    <expr_stmt><expr><name>a</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>b</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>c</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>d</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>e</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>f</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>g</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>h</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>i</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>j</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>k</name></expr>;</expr_stmt>


}</block></diff:delete><diff:insert type="change">
    <block type="pseudo"><empty_stmt>;</empty_stmt></block></diff:insert></then></if>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" filename="if|if">
<if>if<condition>(<expr><operator>!</operator><call><name><name>paraStyles</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><call><name><name>root</name><operator>.</operator><name>ID</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then><diff:delete type="whitespace">
   </diff:delete> <block type="pseudo|"><diff:insert>{
    <decl_stmt><decl><type><name>int</name></type> <name>id</name> <init>= <expr><call><name><name>root</name><operator>.</operator><name>ID</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if>if<condition>(<expr><name>id</name> <operator>!=</operator> <name>tree_rootID</name></expr>)</condition><then>
        <block type="pseudo"><diff:common><expr_stmt><expr><diff:delete type="change"><name>tree_root</name> <operator>&lt;&lt;</operator> <call><name><name>root</name><operator>.</operator><name>ID</name></name><argument_list>()</argument_list></call></diff:delete><diff:insert type="change"><call><name><name>tree_root</name><operator>.</operator><name>insert</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></diff:insert></expr>;</expr_stmt></diff:common></block></then></if>
}</diff:insert></block></then></if>
</unit>

</unit>
