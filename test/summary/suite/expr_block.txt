### Test 1 ###
ORIGINAL
void ShivaGenerator::generate(KisProcessingInformation dstInfo,
                                 const QSize& size,
                                 const KisFilterConfiguration* config,
                                 KoUpdater* progressUpdater) const
{
 
    kernel.compile();
    if(kernel.isCompiled())
    {
        PaintDeviceImage pdi(dst);
        std::list< GTLCore::AbstractImage* > inputs;
        GTLCore::Region region(dstTopLeft.x(), dstTopLeft.y() , size.width(), size.height());
        kernel.evaluatePixeles(region, inputs, &pdi);
    }

}
END_ORIGINAL

MODIFIED
void ShivaGenerator::generate(KisProcessingInformation dstInfo,
                                 const QSize& size,
                                 const KisFilterConfiguration* config,
                                 KoUpdater* progressUpdater) const
{
 
    {
        QMutexLocker l(shivaMutex);

        kernel.compile();
        if(kernel.isCompiled())
        {
            PaintDeviceImage pdi(dst);
            std::list< GTLCore::AbstractImage* > inputs;
            GTLCore::Region region(dstTopLeft.x(), dstTopLeft.y() , size.width(), size.height());
            kernel.evaluatePixeles(region, inputs, &pdi);
        }
    }
}
END_MODIFIED

SUMMARY
• file 'original.cpp|modified.cpp': Impact = High

• Modified function(s): 1
• function 'KShivaGenerator::generate':
  #Impact#: #Statement# = #1#	#Non-Statement# = #0#	#Cyclomatic# = #0#
	• a #declaration# was inserted

END_SUMMARY
